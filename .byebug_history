exit
eixt
exit
@post
exit
@post
@update_post
exit
@post.update(update_params)
update_params[:content]
update_params["content"]
update_params["id"]
update_params
@post.update(content: "Chung giac")
@post
@user
exit
pass
 @post = Post.find(213231)
 @post = Post.find?(213231)
 @post = Post.find!(213231)
 @post = Post.find(213231)
 @post = Post.find(2)
exit
Post.create(user_id:9,  content: "asdas")
Post.create(content: "asdas")
Post.create("asdas")
Post.all
a
a.save()
a=  Post.create( content: "asdas" )
Post.create( content: "asdas" )
Post.create(user_id: 9 , content: "asdas" )
@current_user
post.create
post
exit
next
refresh
g.nil?
g
g=nil
@user
@user = User.find(123131)
a
a = User.find(100)
a
a =User.find(1000)
User.find?(1000)
User.find(1000)?
User.find(1000)
a
a = {json: {id: 1}}
json: {id:1}
User.find(9)
decoded[0]['id']
decoded[0][:id]
decoded[0]["id"]
decoded[0]
decoded[0](:id)
decoded[0].id
decoded[0]
decoded[0][:id]
decoded[]
decoded[:id]
decoded
exit
next
exit
JsonWebToken
next
JsonWebToken.decode
exit
 JWT.encode( {id: @user.id, username: @user.username} , 'SECRET_KEY')
SECRET_KEY
exit
JsonWebToken.encode()
JsonWebToken.encode
JsonWebToken
exit
a= JsonWebToken.new
JsonWebToken.encode(id: @user.id, username: @user.username)
exit
load!
reload!
 JsonWebToken.encode(id: @user.id, username: @user.username)
exit
 token = JsonWebToken.encode(id: @user.id, username: @user.username)
login_params["password"]
login_params
login_params[:password]
@user.authenticate("123123")
@user.authenticate?("123123")
@user.authenticate("a123123")
@user.authenticate("123123")
@user.present?
@user
exit
params.permit(:email, :password)
params.permit(:email, :password).email
params.permit(:email, :password)
params.permit(:email)
params
